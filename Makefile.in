#############################################################################
# Don't touch these...
#############################################################################

this_makefile := ${lastword ${MAKEFILE_LIST}}
SHELL = @bash@ -o pipefail -o errexit -o nounset
.SECONDARY:

#############################################################################
# autoconf/configure standard things

srcdir = @srcdir@
builddir = @builddir@
PACKAGE_TARNAME = @PACKAGE_TARNAME@

# PROGRAMS
# autoconf names
MKDIR_P = @MKDIR_P@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
SED = @SED@

#############################################################################
# local things from autoconf

# other names
base64 = @base64@
fgrep = @fgrep@
find = @find@
identify = @identify@
m4 = @m4@
process_doc = @process_doc@
xmllint = @xmllint@
xs_validate = @xs_validate@

#############################################################################
# below: derived things

tmp_dir = ${builddir}/tmp
tokens_dir = ${tmp_dir}/tokens
publish_dir = ${srcdir}/publish

doc_name = niem-iepd-spec
doc_html = ${publish_dir}/${doc_name}.html
doc_text = ${publish_dir}/${doc_name}.txt

niem_files_default := ${shell ${find} ${srcdir}/niem -type f}
niem_files = ${niem_files_default}

extra_files_source = \
  ${srcdir}/xml-catalog.xml \
  ${srcdir}/iepd-catalog.xsd \
  ${niem_files}

all_files = ${doc_html} ${doc_text} ${extra_files_source:${srcdir}/%=${publish_dir}/%}

#HELP:Build for @PACKAGE_NAME@ (@PACKAGE_TARNAME@)
#HELP:Default target is "all".
.DEFAULT_GOAL = all

#############################################################################
# begin dependency inclusion

depend_mk = ${tmp_dir}/dependencies.mk

build_dependencies=false
ifeq (${build_dependencies},true) # it's OK to build dependencies
${depend_mk}: ${tmp_dir}/${doc_name}.xml
	${MKDIR_P} ${dir $@}
	${process_doc} ${process_doc_flags} --format=makedepend --in=$< --out=$@
endif

ifeq (${wildcard ${depend_mk}},${depend_mk}) # use existing dependencies
  include ${depend_mk}
else
  ${warning No dependencies present. 'make depend' to build dependencies}
endif

# end dependency inclusion
#############################################################################

.PHONY: all #  Build all products
all: ${all_files}

${tmp_dir}/${doc_name}.xml: ${tmp_dir}/macros.m4 ${tmp_dir}/${doc_name}.xml.m4 
	@ ${MKDIR_P} ${dir $@}
	${m4} -P $^ > $@
	if ${fgrep} -n MACRO_ $@ /dev/null | ${SED} -e 's/^/ERROR: Unresolved macro: /'; then ${RM} $@; exit 1; fi
	if ! ${xmllint} --noout $@; then ${RM} $@; exit 1; fi

${tmp_dir}/%: ${tmp_dir}/%.m4 ${tmp_dir}/macros.m4 
	@ ${MKDIR_P} ${dir $@}
	${m4} -P ${tmp_dir}/macros.m4  $< > $@
	if ${fgrep} -n MACRO_ $@ /dev/null | ${SED} -e 's/^/ERROR: Unresolved macro: /'; then ${RM} $@; exit 1; fi

${doc_html}: ${tmp_dir}/${doc_name}.xml ${doc_html_required_files}
	@ ${MKDIR_P} ${dir $@}
	${process_doc} ${process_doc_flags} --in=$< --out=$@

${doc_text}: ${tmp_dir}/${doc_name}.xml ${doc_text_required_files}
	@ ${MKDIR_P} ${dir $@}
	${process_doc} ${process_doc_flags} --format=text --in=$< --out=$@

${publish_dir}/%: ${srcdir}/src/%.m4
	@ ${MKDIR_P} ${dir $@}
	${m4} -P ${tmp_dir}/macros.m4  $< > $@

${publish_dir}/%: ${srcdir}/src/%
	@ ${MKDIR_P} ${dir $@}
	${INSTALL_DATA} $< $@

#############################################################################
# stuff from images

# widths
%.png.width.txt: %.png
	${identify} -format '%w\n' $< > $@

#############################################################################
# depend

.PHONY: depend #  Rebuild dependencies
depend:
	${RM} ${depend_mk}
	${MAKE} ${depend_mk} build_dependencies=true

#############################################################################
# localize from source dir

${tmp_dir}/%: ${srcdir}/%
	${MKDIR_P} ${dir $@}
	${INSTALL_DATA} $< $@

#############################################################################
# valid
# Make sure that validation checks don't build or install anything

.PHONY: valid #  validate test instances against schemas
valid: ${tmp_dir}/tokens/catalog-xs-valid/xsd/sample.5/iepd-catalog.xml

${tmp_dir}/tokens/catalog-xs-valid/%: ${srcdir}/%
	${MKDIR_P} ${dir $@}
	${xs_validate} --catalog=${builddir}/tmp/xml-catalog.xml $<

#############################################################################
# convenience targets

.PHONY: clean #  Remove build products
clean:
	${RM} -r ${all_files}

.PHONY: help #  Print this help
help:
	@ ${SED} -e '/^\.PHONY:/s/^\.PHONY: *\([^ #]*\) *\#\( *\)\([^ ].*\)/\2\1: \3/p;/^[^#]*#HELP:/s/[^#]*#HELP:\(.*\)/\1/p;d' ${this_makefile}
