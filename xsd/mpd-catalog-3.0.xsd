<?xml version="1.0" encoding="US-ASCII"?>
<schema

    ct:conformanceTargets="http://reference.niem.gov/niem/specification/naming-and-design-rules/3.0/#ExtensionSchemaDocument"
    targetNamespace="http://reference.niem.gov/niem/resource/mpd/catalog/3.0/"
    version="3.0"
    xmlns:appinfo="http://release.niem.gov/niem/appinfo/3.0/"
    xmlns:c="http://reference.niem.gov/niem/resource/mpd/catalog/3.0/"
    xmlns:ct="http://release.niem.gov/niem/conformanceTargets/3.0/"
    xmlns:nc="http://release.niem.gov/niem/niem-core/3.0/"
    xmlns:structures="http://release.niem.gov/niem/structures/3.0/"
    xmlns:term="http://release.niem.gov/niem/localTerminology/3.0/"
    xmlns="http://www.w3.org/2001/XMLSchema">

    <import namespace="http://release.niem.gov/niem/structures/3.0/"/>
    <import namespace="http://release.niem.gov/niem/niem-core/3.0/"/>

<!-- 
Please understand, this schema is a work-in-progress.  We realize there are
component names that do not necessarily conform to the NDR yet.  Also, we are
reusing some NIEM 3.0 components that still require review to ensure they have 
all appropriate properties they replaced (for example, AuthoritativeSource 
is now type="nc:EntityType".  Nonetheless, we appreciate your feedback.)
-->

    <annotation>

      <documentation>
          Model Package Description (MPD) Catalog. 
          This schema defines a mpd-catalog.xml artifact 
          for NIEM Model Package Descriptions (MPD):
             NIEM releases, core updates, domain updates, 
             NIEM Information Exchange Package Documentation (IEPD), 
             and NIEM Enterprise Information Exchange Models (EIEM). 
          The purpose of this schema is to facilitate consistent declaration of
	  MPD content, metadata, and lineage to process, display, review, register,
	  search, and discover MPDs efficiently. For IEPDs, the mpd-catalog also 
	  provides instructions for validating IEPs to schemas. 
      </documentation>

      <appinfo>
        <term:LocalTerm term="AS"    literal="Authoritative Source"/>
	<term:LocalTerm term="EIEM"  literal="Enterprise Information Exchange Model"/>
	<term:LocalTerm term="IANA"  literal="Internet Assigned Numbers Authority"/>
	<term:LocalTerm term="ID"    literal="Identifier"/>
	<term:LocalTerm term="IEP"   literal="Information Exchange Package" 
				     definition="an instance XML document"/>
	<term:LocalTerm term="IEPD"  literal="Information Exchange Package 
				     		Documentation"/>
	<term:LocalTerm term="MIME"  literal="Multipurpose Internet Mail Extension"/>
	<term:LocalTerm term="MPD"   literal="Model Package Description"/>
	<term:LocalTerm term="OASIS" literal="Organization for the Advancement
						of Structured Information Standards"/>
	<term:LocalTerm term="POC"   literal="Point of contact"/>
	<term:LocalTerm term="SSGT"  literal="Schema Subset Generation Tool"/>
        <term:LocalTerm term="URI"   literal="Uniform Resource Identifier"/>
	<term:LocalTerm term="Wantlist" definition="An XML file that represents a NIEM
			schema document subset; used by NIEM Schema Subset Generation
			Tool to input/output a schema document subset"/>
      </appinfo> 

    </annotation>

    <element name="Catalog" type="c:CatalogType">
      <annotation>
	<documentation>An MPD catalog that describes MPD artifacts and metadata.
	</documentation>
      </annotation>
    </element>

    <complexType name="CatalogType">
      <annotation>
	<documentation>A datatype for an MPD catalog.</documentation>
      </annotation>
      <complexContent>
	<extension base="structures:ObjectType">
          <sequence>
            <element ref="c:MPD"/>
    	  </sequence>
        </extension>
      </complexContent>
    </complexType>

    <element name="MPD" type="c:MPDType">    
      <annotation>
        <documentation>A Model Package Description (MPD).</documentation>
      </annotation>
    </element>

    <complexType name="MPDType">
      <annotation>
        <documentation>A datatype for an MPD.</documentation>
      </annotation>
      <complexContent>
        <extension base="structures:ObjectType">
          <sequence>
           <element ref="nc:DescriptionText" minOccurs="0"/>
           <element ref="c:Metadata"/>
	   <element ref="c:IEPConformanceTarget" minOccurs="0" maxOccurs="unbounded"/>
           <element ref="c:Artifact" 		 minOccurs="0" maxOccurs="unbounded"/>
          </sequence>
          <attribute ref="c:mpdURI"       use="required"/>
          <attribute ref="c:mpdClassCode" use="required"/>
          <attribute ref="c:mpdName"      use="required"/>
          <attribute ref="c:mpdVersionID" use="required"/>
        </extension>
      </complexContent>
    </complexType>

    <element name="Artifact" abstract="true">
      <annotation>
        <documentation>An file or file set in an MPD.</documentation>
      </annotation>
    </element>

    <complexType name="FileSetType">
      <annotation>
        <documentation>A datatype for an MPD file set artifact.</documentation>
      </annotation>
      <complexContent>
        <extension base="structures:ObjectType">
          <sequence>
            <element ref="nc:DescriptionText" minOccurs="0"/>
            <element ref="c:Artifact"         minOccurs="0" maxOccurs="unbounded"/>
          </sequence>
          <attribute ref="c:pathURI"     use="required"/>
          <attribute ref="c:externalURI" use="optional"/>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="FileType">
      <annotation>
        <documentation>A datatype for an MPD file artifact.</documentation>
      </annotation>
      <complexContent> 
        <extension base="structures:ObjectType">
          <sequence>
            <element ref="c:RequiredFile"     minOccurs="0" maxOccurs="unbounded"/>
            <element ref="nc:DescriptionText" minOccurs="0"/>
          </sequence>
          <attribute ref="c:pathURI"           use="required"/>
          <attribute ref="c:mimeMediaTypeText" use="optional"/>
          <attribute ref="c:externalURI"       use="optional"/>
        </extension>
      </complexContent>
    </complexType>


<!-- For declaring file dependencies ============================================= -->

    <element name="RequiredFile" type="c:FileType">
      <annotation>
	<documentation>An MPD file artifact that another artifact depends on
	and should not be separated from.</documentation>
      </annotation>
    </element>


<!-- File Artifact classifiers =================================================== -->

    <element name="File" type="c:FileType" substitutionGroup="c:Artifact">
      <annotation>
	<documentation>A generic electronic file artifact in an MPD; 
	a file stored on a computer system.</documentation>
      </annotation>
      </element>

    <element name="MPDCatalog" type="c:FileType" substitutionGroup="c:Artifact">
      <annotation>
        <documentation>An mpd-catalog artifact.</documentation>
      </annotation>
    </element>

    <element name="MPDChangeLog" type="c:FileType" substitutionGroup="c:Artifact">
      <annotation>
	<documentation>An MPD artifact that contains a record of the MPD changes.
	</documentation>
      </annotation>
    </element>

    <element name="MasterDocument" type="c:FileType" substitutionGroup="c:Artifact">
      <annotation>
        <documentation>An MPD master document (readme) artifact.</documentation>
      </annotation>
    </element>

    <element name="ExtendedMPDMetadata" type="c:FileType" 
	     substitutionGroup="c:Artifact">
      <annotation>
	<documentation>An MPD metadata artifact that adds optional author-defined
	metadata.</documentation>
      </annotation>
    </element>

    <element name="MPDCatalogExtensionXMLCatalog" type="c:FileType" 
	     substitutionGroup="c:Artifact">
      <annotation>
	<documentation>An xml-catalog that identifies mpd-catalog extensions.
	</documentation>
      </annotation>
    </element>

    <element name="IEPSampleXMLDocument"    type="c:FileType" 
	     substitutionGroup="c:Artifact">
      <annotation>
	<documentation>An example MPD instance XML document or IEP artifact.
	</documentation>
      </annotation>
    </element>

    <element name="BusinessRulesArtifact"   type="c:FileType" 
	     substitutionGroup="c:Artifact">
      <annotation>
	<documentation>An MPD artifact that contains business rules 
	and constraints on exchange content.</documentation>
      </annotation>
    </element>

    <element name="ExternalSchemaDocument"  type="c:FileType" 
	     substitutionGroup="c:Artifact">
      <annotation>
	<documentation>An MPD artifact that is a schema document external to NIEM.
	</documentation>
      </annotation>
    </element>

    <element name="ReferenceSchemaDocument" type="c:FileType" 
	     substitutionGroup="c:Artifact">
      <annotation>
	<documentation>An MPD artifact that is a NIEM reference schema document.
	</documentation>
      </annotation>
    </element>

    <element name="ExtensionSchemaDocument" type="c:FileType" 
	     substitutionGroup="c:Artifact">
      <annotation>
	<documentation>An MPD artifact that is a NIEM extension schema document.
	</documentation>
      </annotation>
    </element>

    <element name="SubsetSchemaDocument"    type="c:FileType" 
	       substitutionGroup="c:Artifact">
      <annotation>
	<documentation>An MPD artifact that is a subset schema document.
	</documentation>
      </annotation>
    </element>

    <element name="Wantlist" type="c:FileType" substitutionGroup="c:Artifact">
      <annotation>
	<documentation>An MPD artifact that represents a NIEM schema subset 
	and is used as an import or export for the NIEM SSGT.</documentation>
      </annotation>
    </element>

    <element name="XMLCatalog" type="c:FileType" substitutionGroup="c:Artifact">
      <annotation>
        <documentation>An MPD artifact that is an OASIS XML catalog.</documentation>
      </annotation>
    </element>

    <element name="SchematronSchema" type="c:FileType" substitutionGroup="c:Artifact">
      <annotation>
        <documentation>A Schematron schema document.</documentation>
      </annotation>
    </element>

    <element name="RelaxNGSchema" type="c:FileType" substitutionGroup="c:Artifact">
      <annotation>
        <documentation>A RelaxNG schema.</documentation>
      </annotation>
    </element>

    <element name="Documentation" type="c:FileType" substitutionGroup="c:Artifact">
      <annotation>
	<documentation>An MPD artifact that is a form of explanatory documentation.
	</documentation>
      </annotation>
    </element>

    <element name="ApplicationInfo" type="c:FileType" substitutionGroup="c:Artifact">
      <annotation>
	<documentation>An MPD artifact that is used by a software tool
	(e.g., import, export, input, output, etc.).</documentation>
      </annotation>
    </element>


<!-- Set Artifact Classifiers ==================================================== -->

<!-- May no longer need BaseSchemaDocumentSet? -->

    <element name="BaseSchemaDocumentSet"
             type="c:BaseSchemaDocumentSetType"      substitutionGroup="c:Artifact">
      <annotation>
	<documentation>An MPD set artifact that may include a schema document subset,
	as well as reference, extension, exchange, and external schema documents.
	</documentation>
      </annotation>
    </element>

    <element name="ConstraintSchemaDocumentSet"
             type="c:BaseSchemaDocumentSetType"      substitutionGroup="c:Artifact">
      <annotation>
	<documentation>An MPD set artifact that may contain one or more constraint 
	schema documents.</documentation>
      </annotation>
    </element>
  
    <element name="ReferenceSchemaDocumentSet"
             type="c:ReferenceSchemaDocumentSetType" substitutionGroup="c:Artifact">
      <annotation>
	<documentation>An MPD set artifact that is a reference schema document set.
	</documentation>
      </annotation>
    </element>


<!-- Artifact Classifier Types =================================================== -->

<!-- May no longer need this? Caution! Also reused by ConstraintSchemaDocumentSet -->

    <complexType name="BaseSchemaDocumentSetType">
      <annotation>
	<documentation>A datatype for an MPD set artifact that may include a schema
	document subset, as well as reference, extension, exchange, and external
	schema documents.</documentation>
      </annotation>
      <complexContent>
        <restriction base="c:FileSetType">
          <sequence>
	    <element ref="c:ExtensionSchemaDocument" minOccurs="0" 
			  			     maxOccurs="unbounded"/>
	    <element ref="c:SubsetSchemaDocument"    minOccurs="0" 
						     maxOccurs="unbounded"/>
	    <element ref="c:ExternalSchemaDocument"  minOccurs="0" 
						     maxOccurs="unbounded"/>
	    <element ref="c:ReferenceSchemaDocument" minOccurs="0" 
						     maxOccurs="unbounded"/>
            <element ref="c:Wantlist"                minOccurs="0"/>
          </sequence>
        </restriction>
      </complexContent>
    </complexType>

    <complexType name="ReferenceSchemaDocumentSetType">
      <annotation>
	<documentation>A datatype for an MPD set artifact 
	that is a reference schema document set.</documentation>
      </annotation>
      <complexContent>
        <restriction base="c:FileSetType">
          <sequence>
            <element ref="c:ReferenceSchemaDocument" maxOccurs="unbounded"/>
          </sequence>
        </restriction>
      </complexContent>
    </complexType>


<!-- Primitives ================================================================== -->

    <attribute name="mpdURI"       type="anyURI">
      <annotation>
        <documentation>A globally unique identifier (URI) for an MPD.</documentation>
      </annotation>
    </attribute>

    <attribute name="mpdClassCode" type="c:MPDClassCodeSimpleType">
      <annotation>
	<documentation>A classification for an MPD; values are drawn 
	from the set {rel, cu, du, iepd, eiem}.</documentation>
      </annotation>
    </attribute>

    <attribute name="mpdName"      type="string">
      <annotation>
        <documentation>A label or title for an MPD.</documentation>
      </annotation>
    </attribute>

    <attribute name="mpdVersionID" type="c:MPDVersionIDSimpleType">
      <annotation>
	<documentation>An identifier that distinguishes releases of a given MPD.
	</documentation>
      </annotation>
    </attribute>

    <attribute name="externalURI" type="anyURI">
      <annotation>
	<documentation>A globally unique identifier (URI) for an artifact 
	in another MPD that is reused by this MPD.</documentation>
      </annotation>
    </attribute>

    <attribute name="pathURI" type="anyURI">
      <annotation>
	<documentation>A URI for the relative pathname of an artifact.</documentation>
      </annotation>
    </attribute>

    <attribute name="mimeMediaTypeText" type="string">
      <annotation>
	<documentation>A classification for an MPD file
	artifact from the IANA MIME media classes: 
	http://www.iana.org/assignments/media-types.</documentation>
      </annotation>
    </attribute>

    <attribute name="resourceURI"   type="anyURI">
      <annotation>
	<documentation>A globally unique identifier (URI) for another 
	MPD or document to which this MPD relates.</documentation>
      </annotation>
    </attribute>

    <attribute name="relationshipCode" type="c:RelationshipCodeSimpleType">
      <annotation>
	<documentation>A classification or reason for the connectedness between
	this MPD and the resource referenced in resourceURI.</documentation>
      </annotation>
    </attribute>

    <simpleType name="MPDClassCodeSimpleType">
      <annotation>
        <documentation>A datatype for the classification of an MPD.</documentation>
      </annotation>
        <restriction base="token">
            <enumeration value="rel">
		<annotation>
		  <documentation>release</documentation>
		</annotation>
	    </enumeration>
            <enumeration value="cu">
		<annotation>
		  <documentation>core update</documentation>
		</annotation>
	    </enumeration>
            <enumeration value="du">
		<annotation>
		  <documentation>domain update</documentation>
		</annotation>
	    </enumeration>
            <enumeration value="iepd">
		<annotation>
		  <documentation>information exchange package documentation
		  </documentation>
		</annotation>
	    </enumeration>
            <enumeration value="eiem">
		<annotation>
		  <documentation>enterprise information exchange model</documentation>
		</annotation>
	    </enumeration>
        </restriction>
    </simpleType>

    <simpleType name="MPDVersionIDSimpleType">
      <annotation>
	<documentation>A datatype for an identifier that distinguishes releases
	of a given MPD.</documentation>
      </annotation>
      <restriction base="token">
        <pattern value="[0-9]+(\.[0-9]+)*((alpha|beta|rc|rev)[0-9]+)?"/>
      </restriction>
    </simpleType>

    <simpleType name="RelationshipCodeSimpleType">
      <annotation>
	<documentation>A datatype for a classification  
	of the relationship between MPDs.</documentation>
      </annotation>
        <restriction base="token">
	    <enumeration value="version_of">
	      <annotation>
		<documentation>A relationshipCode value for indicating that this MPD
		is a different version of the MPD referenced in resourceURI.  This
		code value is only needed in cases where significant name changes
		might obscure the relationship to the previous version.  For example,
		NIEM Justice 4.1 is a version of GJXDM 3.0.3.</documentation>
	        </annotation>
	    </enumeration>
	    <enumeration value="specializes">
	      <annotation>
		<documentation>A relationshipCode value for indicating that this
		MPD is a generalization of the MPD referenced in resourceURI.
		This value is the inverse of specializes.</documentation>
	      </annotation>
	    </enumeration>
            <enumeration value="generalizes">
	      <annotation>
		<documentation>A relationshipCode value for indicating that this MPD
		is a generalization of the MPD referenced in resourceURI.  This
		value is the inverse of specializes.</documentation>
		</annotation>
	    </enumeration>
            <enumeration value="supersedes">
		<annotation>
		  <documentation>A relationshipCode value for indicating that this
		  MPD replaces the MPD referenced in resourceURI.</documentation>
		</annotation>
	    </enumeration>
            <enumeration value="deprecates">
		<annotation>
		  <documentation>A relationshipCode value for indicating that content
		  in this MPD is preferred over content in the MPD referenced in
		  resourceURI; and at some time in the future will supersede the
		  MPD referenced in resourceURI.</documentation>
		</annotation>
	    </enumeration>
            <enumeration value="adapts">
		<annotation>
		  <documentation>A relationshipCode value for indicating that this
		  MPD is an adaptation of the MPD referenced in resourceURI.
		  </documentation>
		</annotation>
	    </enumeration>
            <enumeration value="updates">
		<annotation>
		  <documentation>A relationshipCode value for indicating that
		  this MPD is an incremental update to the resource referenced in
		  resourceURI.  Used by a core or domain update to identify the
		  domain schema in a NIEM release being incrementally updated
		  (not replaced).</documentation>
		</annotation>
	    </enumeration>
            <enumeration value="conforms_to">
		<annotation>
		  <documentation>A relationshipCode value for indicating that this
		  MPD conforms to the specification or standard referenced in
		  resourceURI.</documentation>
		</annotation>
	    </enumeration>
        </restriction>
    </simpleType>


<!-- IEP Conformance Targets ==================================================== -->

    <element name="IEPConformanceTarget" type="c:IEPConformanceTargetType">
      <annotation>
	<documentation>A class or category of IEPs which has a set of validity 
	constraints and a unique identifier. Every IEP is an instance of one or
	more IEP Conformance Targets.</documentation>
      </annotation>
    </element>

    <complexType name="IEPConformanceTargetType">
      <annotation>
	<documentation>A datatype for a class or category of IEP, which
	has a set of validity constraints and a unique identifier.</documentation>
      </annotation>
      <complexContent>
	<extension base="structures:ObjectType">
	  <sequence>
	    <element ref="nc:DescriptionText"   minOccurs="0"/>
	    <element ref="c:ValidityConstraint" minOccurs="0" maxOccurs="unbounded"/>
	    <element ref="c:IEPSampleDocument"  minOccurs="0" maxOccurs="unbounded"/>
    	  </sequence>
	</extension>
      </complexContent>
    </complexType>

    <element name="ValidityConstraint" abstract="true">
      <annotation>
	<documentation>A rule or instructions for validating an IEP candidate.
	</documentation>
      </annotation>
    </element>


<!-- Validity Constraints ======================================================== -->

    <element name="ValidToXPath" type="c:XPathType"
	    substitutionGroup="c:ValidityConstraint">
      <annotation>
	<documentation>A validity constraint that indicates that the given XPath 
	expression, evaluated against an artifact, has an effective boolean value 
	of TRUE.</documentation>
      </annotation>
    </element>

    <complexType name="XPathType">
      <annotation>
	<documentation>A datatype for an XPath expression.</documentation>
      </annotation>
      <complexContent>
        <extension base="structures:ObjectType">
          <sequence>
            <element ref="nc:DescriptionText" minOccurs="0"/>
          </sequence>
          <attribute ref="c:xPathText" use="required"/>
        </extension>
      </complexContent>
    </complexType>

    <attribute name="xPathText" type="string">
      <annotation>
	<documentation>An XPath expression.</documentation>
      </annotation>
    </attribute>

    <element name="XMLSchemaValid" 
             type="c:XMLSchemaValidationType"
	     substitutionGroup="c:ValidityConstraint">
      <annotation>
	<documentation>A validity constraint that indicates that an artifact must
	be locally XML Schema valid against an XML schema described by an XML Catalog
	file, starting with a given validation root.</documentation>
      </annotation>
    </element>

    <complexType name="ValidationWithValidationRootType">
      <annotation>
	<documentation>A datatype for a base for a validation that may start with 
	a validation root.</documentation>
      </annotation>
      <complexContent>
        <extension base="structures:ObjectType">
          <sequence>
            <element ref="nc:DescriptionText"    minOccurs="0"/>
            <element ref="c:ValidationRootXPath" minOccurs="0"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <complexType name="XMLSchemaValidationType">
      <annotation>
	<documentation>A datatype for an XML Schema validation constraint, indicating
	an XML Schema against which an artifact may be validated, as well as a 
	description of validation roots for assessment of validity.</documentation>
      </annotation>
      <complexContent>
        <extension base="c:ValidationWithValidationRootType">
          <sequence>
            <element ref="c:XMLCatalog" minOccurs="0"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <element name="ValidationRootXPath" type="c:XPathType">
      <annotation>
	<documentation>An XPath expression that identfies a seqence of zero or more
	validation root elements for a validity constraint on an XML document.
	</documentation>
      </annotation>
    </element>

    <element name="SchematronValid" 
             type="c:SchematronValidationType"
	     substitutionGroup="c:ValidityConstraint">
      <annotation>
	<documentation>A validity constraint that indicates that an artifact must
	be valid against the rules carried by a Schematron file, starting with 
	the identified validation roots.</documentation>
      </annotation>
    </element>

    <complexType name="SchematronValidationType">
      <annotation>
	<documentation>A datatype for a Schematron validation constraint, indicating
	a Schematron schema document against which an artifact may be validated
	as well as a description of the validation roots for assessment of validity.
	</documentation>
      </annotation>
      <complexContent>
        <extension base="c:ValidationWithValidationRootType">
          <sequence>
            <element ref="c:SchematronSchema"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <element name="RelaxNGValid" type="c:RelaxNGValidationType"
	substitutionGroup="c:ValidityConstraint">
      <annotation>
	<documentation>A validity constraint that indicates that an artifact must
	be valid against the rules carried by a RelaxNG schema.</documentation>
      </annotation>
    </element>

    <complexType name="RelaxNGValidationType">
      <annotation>
	<documentation>A datatype for a RelaxNG validation constraint, indicating a
	RelaxNG schema document against which an artifact may be validated, as well
	as a description of the validation roots for assessment of validity.
	</documentation>
      </annotation>
      <complexContent>
        <extension base="c:ValidationWithValidationRootType">
          <sequence>
            <element ref="c:RelaxNGSchema"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <element name="HasDocumentElement" type="c:QualifiedNamesType" 
	substitutionGroup="c:ValidityConstraint">
      <annotation>
	<documentation>A validity constraint that indicates that an artifact has
	a document element with a name that is one of the given qualified names.
	</documentation>
      </annotation>
    </element>

    <complexType name="QualifiedNamesType">
      <annotation>
	<documentation>A datatype for a set of qualified names.</documentation>
      </annotation>
      <complexContent>
        <extension base="structures:ObjectType">
          <sequence>
            <element ref="nc:DescriptionText" minOccurs="0"/>
          </sequence>
          <attribute ref="c:qualifiedNameList" use="required"/>
        </extension>
      </complexContent>
    </complexType>
    
    <attribute name="qualifiedNameList" type="c:QualifiedNameListSimpleType">
      <annotation>
	<documentation>A list of qualified names.</documentation>
      </annotation>
    </attribute>

    <simpleType name="QualifiedNameListSimpleType">
      <annotation>
	<documentation>A simple datatype denoting a list of qualified names.
	</documentation>
      </annotation>
      <list itemType="QName"/>
    </simpleType>

    <element name="ConformsToConformanceTarget" type="c:ConformanceTargetType"
	     substitutionGroup="c:ValidityConstraint">
      <annotation>
	<documentation>A validity constraint that indicates that an artifact
	must conform to the given conformance target.</documentation>
      </annotation>
    </element>

    <complexType name="ConformanceTargetType">
      <annotation>
        <documentation>A datatype for identifying and describing a conformance target.
        </documentation>
      </annotation>
      <complexContent>
        <extension base="structures:ObjectType">
          <sequence>
            <element ref="nc:DescriptionText" minOccurs="0"/>
          </sequence>
          <attribute ref="c:conformanceTargetURI" use="required"/>
        </extension>
      </complexContent>
    </complexType>

    <attribute name="conformanceTargetURI" type="anyURI">
      <annotation>
        <documentation>A URI for a conformance target.</documentation>
      </annotation>
    </attribute>

    <element name="ConformsToRule" type="c:TextRuleType" 
	substitutionGroup="c:ValidityConstraint">
      <annotation>
	<documentation>A validity constraint that indicates that an artifact
	must conform to the given text rule, drafted in a human language.
	</documentation>
      </annotation>
    </element>

    <complexType name="TextRuleType">
      <annotation>
	<documentation>A datatype for a rule drafted 
	in a human language.</documentation>
      </annotation>
      <complexContent>
        <extension base="structures:ObjectType">
	  <sequence>
            <element ref="nc:DescriptionText" minOccurs="0"/>
	    <element ref="c:RuleText"/>
	  </sequence>
        </extension>
      </complexContent>
    </complexType>

    <element name="RuleText" type="nc:TextType"> 
      <annotation>
	<documentation>A rule written in a human language.</documentation>
      </annotation>
    </element>


<!-- Metadata ==================================================================== -->
    
    <element name="MPDInformation" type="c:MPDInformationType">
      <annotation>
        <documentation>A set of descriptive data about an MPD.</documentation>
      </annotation>
    </element>

    <complexType name="MPDInformationType">
      <annotation>
	<documentation>A datatype for a set of descriptive data about an MPD.
	</documentation>
      </annotation>
      <complexContent>
        <extension base="structures:ObjectType">
          <sequence>
            <element ref="c:CreationDate"/>
            <element ref="c:AuthoritativeSource"/>
            <element ref="c:LastRevisionDate"    minOccurs="0"/>
            <element ref="c:StatusText"          minOccurs="0"/>
            <element ref="c:Relationship"        minOccurs="0" maxOccurs="unbounded"/>
            <element ref="c:KeywordText"         minOccurs="0" maxOccurs="unbounded"/>
            <element ref="c:DomainText"          minOccurs="0" maxOccurs="unbounded"/>
            <element ref="c:PurposeText"         minOccurs="0" maxOccurs="unbounded"/>
            <element ref="c:ExchangePatternText" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="c:ExchangePartnerName" minOccurs="0" maxOccurs="unbounded"/>
          </sequence>
        </extension>
      </complexContent>
    </complexType>

    <element name="AuthoritativeSource" type="nc:EntityType">
      <annotation>
	      <documentation>An official sponsoring or authoring 
	      organization responsible for an MPD.</documentation>
      </annotation>
    </element>

<!-- These have been replaced by nc:EntityType which 
    allows a Person or Organization as the Auth Src. 

    <element name="POC" type="c:POCType">
    <complexType name="POCType">
            <element ref="c:POCName"/>
            <element ref="c:POCEmail"     maxOccurs="unbounded"/>
            <element ref="c:POCTelephone" maxOccurs="unbounded"/>
    <element name="ASName" type="string">
	<documentation>A name for the current MPD authoritative source; could be the
	author, creator, sponsor, etc. (organization or person).</documentation>
    <element name="ASAddressText" type="string">
    <element name="ASWebSiteURL" type="anyURI">
    <element name="POCName" type="string">
        <documentation>A name for a person, position, or title.</documentation>
-->

    <element name="CreationDate" type="date">
      <annotation>
	<documentation>A date this MPD was published.</documentation>
      </annotation>
    </element>

    <element name="LastRevisionDate" type="date">
      <annotation>
	<documentation>A date the latest changes to an MPD were published
	(i.e., CreationDate of previous version).</documentation>
      </annotation>
    </element>

    <element name="StatusText"   type="string">
      <annotation>
	 <documentation>A description of the current state of this MPD 
	 in development; may also project future plans for the MPD.
	 </documentation>
      </annotation>
    </element>

    <element name="Relationship" type="c:RelationshipType">
      <annotation>
	<documentation>A reference to another MPD related to this MPD.
	</documentation>
      </annotation>
    </element>

    <element name="KeywordText"  type="string">
      <annotation>
	<documentation>A common alias, term, or phrase that would help 
	to facilitate search and discovery of this MPD.</documentation>
      </annotation>
    </element>

    <element name="DomainText"   type="string">
      <annotation>
	<documentation>A description of the environment or NIEM Domain 
	in which this MPD is applicable or used.</documentation>
      </annotation>
    </element>

    <element name="PurposeText"  type="string">
      <annotation>
	<documentation>A description of the intended usage and reason 
	for which an MPD exists.</documentation>
      </annotation>
    </element>

    <element name="ExchangePatternText" type="string">
      <annotation>
	<documentation>A description of a transactional or design pattern used
	for this IEPD (generally, applicable to IEPDs only).</documentation>
      </annotation>
    </element>

    <element name="ExchangePartnerName" type="string">
      <annotation>
	<documentation>A name of an entity or organization that uses this MPD.
	</documentation>
      </annotation>
    </element>

    <complexType name="RelationshipType">
      <annotation>
	<documentation>A datatype for a reference to another MPD related to this MPD.
	<documentation>
      </annotation>
      <complexContent>
        <extension base="structures:ObjectType">
          <sequence>
            <element ref="nc:DescriptionText" minOccurs="0"/>
          </sequence>
          <attribute ref="c:relationshipCode" use="required"/>
          <attribute ref="c:resourceURI"      use="required"/>
        </extension>
      </complexContent>
    </complexType>

</schema>

