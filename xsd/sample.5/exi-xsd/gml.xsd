<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:sch="http://purl.oclc.org/dsdl/schematron"
   xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xlink="http://www.w3.org/1999/xlink"
   targetNamespace="http://www.opengis.net/gml/3.2" elementFormDefault="qualified"
   version="3.2.1 2010-01-28">
   <annotation>
      <documentation>
         GML Subset schema for gml:pos,gml:Point,gml:LineString,gml:LinearRing,gml:Polygon,gml:MeasureType,gml:LengthType,gml:AngleType
         written by gmlSubset.xslt. 
         Only for use in EXI encoding/decoding. 
         Modified for improved efficiency and to enforce CoT-NIEM constraints: 
         *  use decimal instead of double in gml:doubleList 
         *  srsName constrained to a single CRS 
         *  gml:coordinates removed from gml:PointType 
         *  all children but gml:pos removed from gml:LineStringType and gml:LinearRingType 
         *  gml:interior removed from gml:PolygonType 
         Search for "CoT-NIEM" to find modifications
      </documentation>
   </annotation>
   <import namespace="http://www.w3.org/1999/xlink" schemaLocation="file:/C:/Work/IM14/01-CoT-NIEM/0.9/base-xsd/niem/external/ogc/xlink/1.0.0/xlinks.xsd"/>
   <!-- ================================================= -->
   <element name="pos" type="gml:DirectPositionType"/>
   <!-- ================================================= -->
   <complexType name="DirectPositionType">
      <annotation>
         <documentation>Direct position instances hold the coordinates for a position within some
            coordinate reference system (CRS). Since direct positions, as data types, will often be
            included in larger objects (such as geometry elements) that have references to CRS, the
            srsName attribute will in general be missing, if this particular direct position is
            included in a larger element with such a reference to a CRS. In this case, the CRS is
            implicitly assumed to take on the value of the containing object's CRS. if no srsName
            attribute is given, the CRS shall be specified as part of the larger context this
            geometry element is part of, typically a geometric object like a point, curve,
            etc.</documentation>
      </annotation>
      <simpleContent>
         <extension base="gml:doubleList">
            <attributeGroup ref="gml:SRSReferenceGroup"/>
         </extension>
      </simpleContent>
   </complexType>
   <!-- ================================================= -->
   <simpleType name="doubleList">
      <annotation>
         <documentation>A type for a list of values of the respective simple type.</documentation>
      </annotation>
      <list itemType="decimal"/>  <!-- changed from double for CoT-NIEM -->
   </simpleType>
   <!-- ================================================= -->
   <!-- ================================================= -->
   <attributeGroup name="SRSReferenceGroup">
      <annotation>
         <documentation>The attribute group SRSReferenceGroup is an optional reference to the CRS
            used by this geometry, with optional additional information to simplify the processing
            of the coordinates when a more complete definition of the CRS is not needed. In general
            the attribute srsName points to a CRS instance of gml:AbstractCoordinateReferenceSystem.
            For well-known references it is not required that the CRS description exists at the
            location the URI points to. If no srsName attribute is given, the CRS shall be specified
            as part of the larger context this geometry element is part of.</documentation>
      </annotation>
      <!-- <attribute name="srsName" type="anyURI"/> REDEFINED in CoT-NIEM subset -->
      <attribute name="srsName">
         <simpleType>
            <restriction base="anyURI">
               <enumeration value="http://metadata.ces.mil/mdr/ns/GSIP/crs/WGS84E_3D"/>
            </restriction>
         </simpleType>
      </attribute>
      <attribute name="srsDimension" type="positiveInteger"/>
      <attributeGroup ref="gml:SRSInformationGroup"/>
   </attributeGroup>
   <!-- ================================================= -->
   <attributeGroup name="SRSInformationGroup">
      <annotation>
         <documentation>The attributes uomLabels and axisLabels, defined in the SRSInformationGroup
            attribute group, are optional additional and redundant information for a CRS to simplify
            the processing of the coordinate values when a more complete definition of the CRS is
            not needed. This information shall be the same as included in the complete definition of
            the CRS, referenced by the srsName attribute. When the srsName attribute is included,
            either both or neither of the axisLabels and uomLabels attributes shall be included.
            When the srsName attribute is omitted, both of these attributes shall be omitted. The
            attribute axisLabels is an ordered list of labels for all the axes of this CRS. The
            gml:axisAbbrev value should be used for these axis labels, after spaces and forbidden
            characters are removed. When the srsName attribute is included, this attribute is
            optional. When the srsName attribute is omitted, this attribute shall also be omitted.
            The attribute uomLabels is an ordered list of unit of measure (uom) labels for all the
            axes of this CRS. The value of the string in the gml:catalogSymbol should be used for
            this uom labels, after spaces and forbidden characters are removed. When the axisLabels
            attribute is included, this attribute shall also be included. When the axisLabels
            attribute is omitted, this attribute shall also be omitted.</documentation>
      </annotation>
      <attribute name="axisLabels" type="gml:NCNameList"/>
      <attribute name="uomLabels" type="gml:NCNameList"/>
   </attributeGroup>
   <!-- ================================================= -->
   <simpleType name="NCNameList">
      <annotation>
         <documentation>A type for a list of values of the respective simple type.</documentation>
      </annotation>
      <list itemType="NCName"/>
   </simpleType>
   <!-- ================================================= -->
   <!-- ================================================= -->
   <element name="Point" type="gml:PointType" substitutionGroup="gml:AbstractGeometricPrimitive">
      <annotation>
         <documentation>A Point is defined by a single coordinate tuple. The direct position of a
            point is specified by the pos element which is of type
            DirectPositionType.</documentation>
      </annotation>
   </element>
   <!-- ================================================= -->
   <complexType name="PointType">
      <complexContent>
         <extension base="gml:AbstractGeometricPrimitiveType">
            <sequence>
               <choice>
                  <element ref="gml:pos"/>
                  <!-- <element ref="gml:coordinates"/>  REMOVED from CoT-NIEM subset -->
               </choice>
            </sequence>
         </extension>
      </complexContent>
   </complexType>
   <!-- ================================================= -->
   <complexType name="AbstractGeometricPrimitiveType" abstract="true">
      <annotation>
         <documentation>gml:AbstractGeometricPrimitiveType is the abstract root type of the
            geometric primitives. A geometric primitive is a geometric object that is not decomposed
            further into other primitives in the system. All primitives are oriented in the
            direction implied by the sequence of their coordinate tuples.</documentation>
      </annotation>
      <complexContent>
         <extension base="gml:AbstractGeometryType"/>
      </complexContent>
   </complexType>
   <!-- ================================================= -->
   <complexType name="AbstractGeometryType" abstract="true">
      <annotation>
         <documentation>All geometry elements are derived directly or indirectly from this abstract
            supertype. A geometry element may have an identifying attribute (gml:id), one or more
            names (elements identifier and name) and a description (elements description and
            descriptionReference) . It may be associated with a spatial reference system (attribute
            group gml:SRSReferenceGroup). The following rules shall be adhered to: - Every geometry
            type shall derive from this abstract type. - Every geometry element (i.e. an element of
            a geometry type) shall be directly or indirectly in the substitution group of
            AbstractGeometry.</documentation>
      </annotation>
      <complexContent>
         <extension base="gml:AbstractGMLType">
            <attributeGroup ref="gml:SRSReferenceGroup"/>
         </extension>
      </complexContent>
   </complexType>
   <!-- ================================================= -->
   <complexType name="AbstractGMLType" abstract="true">
      <sequence>
         <group ref="gml:StandardObjectProperties"/>
      </sequence>
      <attribute ref="gml:id" use="required"/>
   </complexType>
   <!-- ================================================= -->
   <group name="StandardObjectProperties">
      <sequence>
         <element ref="gml:metaDataProperty" minOccurs="0" maxOccurs="unbounded"/>
         <element ref="gml:description" minOccurs="0"/>
         <element ref="gml:descriptionReference" minOccurs="0"/>
         <element ref="gml:identifier" minOccurs="0"/>
         <element ref="gml:name" minOccurs="0" maxOccurs="unbounded"/>
      </sequence>
   </group>
   <!-- ================================================= -->
   <element name="metaDataProperty" type="gml:MetaDataPropertyType">
      <annotation>
         <appinfo>deprecated</appinfo>
      </annotation>
   </element>
   <!-- ================================================= -->
   <complexType name="MetaDataPropertyType">
      <annotation>
         <appinfo>deprecated</appinfo>
      </annotation>
      <sequence minOccurs="0">
         <element ref="gml:AbstractMetaData"/>
      </sequence>
      <attributeGroup ref="gml:AssociationAttributeGroup"/>
      <attribute name="about" type="anyURI"/>
   </complexType>
   <!-- ================================================= -->
   <element name="AbstractMetaData" type="gml:AbstractMetaDataType" abstract="true"
      substitutionGroup="gml:AbstractObject">
      <annotation>
         <appinfo>deprecated</appinfo>
      </annotation>
   </element>
   <!-- ================================================= -->
   <complexType name="AbstractMetaDataType" abstract="true" mixed="true">
      <annotation>
         <appinfo>deprecated</appinfo>
      </annotation>
      <sequence/>
      <attribute ref="gml:id"/>
   </complexType>
   <!-- ================================================= -->
   <attribute name="id" type="ID">
      <annotation>
         <documentation>The attribute gml:id supports provision of a handle for the XML element
            representing a GML Object. Its use is mandatory for all GML objects. It is of XML type
            ID, so is constrained to be unique in the XML document within which it
            occurs.</documentation>
      </annotation>
   </attribute>
   <!-- ================================================= -->
   <element name="AbstractObject" abstract="true">
      <annotation>
         <documentation>This element has no type defined, and is therefore implicitly (according to
            the rules of W3C XML Schema) an XML Schema anyType. It is used as the head of an XML
            Schema substitution group which unifies complex content and certain simple content
            elements used for datatypes in GML, including the gml:AbstractGML substitution
            group.</documentation>
      </annotation>
   </element>
   <!-- ================================================= -->
   <attributeGroup name="AssociationAttributeGroup">
      <annotation>
         <documentation>XLink components are the standard method to support hypertext referencing in
            XML. An XML Schema attribute group, gml:AssociationAttributeGroup, is provided to
            support the use of Xlinks as the method for indicating the value of a property by
            reference in a uniform manner in GML.</documentation>
      </annotation>
      <attributeGroup ref="xlink:simpleLink"/>
      <attribute name="nilReason" type="gml:NilReasonType"/>
      <attribute ref="gml:remoteSchema">
         <annotation>
            <appinfo>deprecated</appinfo>
         </annotation>
      </attribute>
   </attributeGroup>
   <!-- ================================================= -->
   <simpleType name="NilReasonType">
      <annotation>
         <documentation>gml:NilReasonType defines a content model that allows recording of an
            explanation for a void value or other exception. gml:NilReasonType is a union of the
            following enumerated values: - inapplicable there is no value - missing the correct
            value is not readily available to the sender of this data. Furthermore, a correct value
            may not exist - template the value will be available later - unknown the correct value
            is not known to, and not computable by, the sender of this data. However, a correct
            value probably exists - withheld the value is not divulged - other:text other brief
            explanation, where text is a string of two or more characters with no included spaces
            and - anyURI which should refer to a resource which describes the reason for the
            exception A particular community may choose to assign more detailed semantics to the
            standard values provided. Alternatively, the URI method enables a specific or more
            complete explanation for the absence of a value to be provided elsewhere and indicated
            by-reference in an instance document. gml:NilReasonType is used as a member of a union
            in a number of simple content types where it is necessary to permit a value from the
            NilReasonType union as an alternative to the primary type.</documentation>
      </annotation>
      <union memberTypes="gml:NilReasonEnumeration anyURI"/>
   </simpleType>
   <!-- ================================================= -->
   <simpleType name="NilReasonEnumeration">
      <union>
         <simpleType>
            <restriction base="string">
               <enumeration value="inapplicable"/>
               <enumeration value="missing"/>
               <enumeration value="template"/>
               <enumeration value="unknown"/>
               <enumeration value="withheld"/>
            </restriction>
         </simpleType>
         <simpleType>
            <restriction base="string">
               <pattern value="other:\w{2,}"/>
            </restriction>
         </simpleType>
      </union>
   </simpleType>
   <!-- ================================================= -->
   <!-- ================================================= -->
   <attribute name="remoteSchema" type="anyURI">
      <annotation>
         <appinfo>deprecated</appinfo>
      </annotation>
   </attribute>
   <!-- ================================================= -->
   <element name="description" type="gml:StringOrRefType">
      <annotation>
         <documentation>The value of this property is a text description of the object.
            gml:description uses gml:StringOrRefType as its content model, so it may contain a
            simple text string content, or carry a reference to an external description. The use of
            gml:description to reference an external description has been deprecated and replaced by
            the gml:descriptionReference property.</documentation>
      </annotation>
   </element>
   <!-- ================================================= -->
   <complexType name="StringOrRefType">
      <annotation>
         <appinfo>deprecated</appinfo>
      </annotation>
      <simpleContent>
         <extension base="string">
            <attributeGroup ref="gml:AssociationAttributeGroup"/>
         </extension>
      </simpleContent>
   </complexType>
   <!-- ================================================= -->
   <!-- ================================================= -->
   <element name="descriptionReference" type="gml:ReferenceType">
      <annotation>
         <documentation>The value of this property is a remote text description of the object. The
            xlink:href attribute of the gml:descriptionReference property references the external
            description.</documentation>
      </annotation>
   </element>
   <!-- ================================================= -->
   <complexType name="ReferenceType">
      <annotation>
         <documentation>gml:ReferenceType is intended to be used in application schemas directly, if
            a property element shall use a "by-reference only" encoding.</documentation>
      </annotation>
      <sequence/>
      <attributeGroup ref="gml:OwnershipAttributeGroup"/>
      <attributeGroup ref="gml:AssociationAttributeGroup"/>
   </complexType>
   <!-- ================================================= -->
   <attributeGroup name="OwnershipAttributeGroup">
      <annotation>
         <documentation>Encoding a GML property inline vs. by-reference shall not imply anything
            about the "ownership" of the contained or referenced GML Object, i.e. the encoding style
            shall not imply any "deep-copy" or "deep-delete" semantics. To express ownership over
            the contained or referenced GML Object, the gml:OwnershipAttributeGroup attribute group
            may be added to object-valued property elements. If the attribute group is not part of
            the content model of such a property element, then the value may not be "owned". When
            the value of the owns attribute is "true", the existence of inline or referenced
            object(s) depends upon the existence of the parent object.</documentation>
      </annotation>
      <attribute name="owns" type="boolean" default="false"/>
   </attributeGroup>
   <!-- ================================================= -->
   <element name="identifier" type="gml:CodeWithAuthorityType">
      <annotation>
         <documentation>Often, a special identifier is assigned to an object by the maintaining
            authority with the intention that it is used in references to the object For such cases,
            the codeSpace shall be provided. That identifier is usually unique either globally or
            within an application domain. gml:identifier is a pre-defined property for such
            identifiers.</documentation>
      </annotation>
   </element>
   <!-- ================================================= -->
   <complexType name="CodeWithAuthorityType">
      <annotation>
         <documentation>gml:CodeWithAuthorityType requires that the codeSpace attribute is provided
            in an instance.</documentation>
      </annotation>
      <simpleContent>
         <restriction base="gml:CodeType">
            <attribute name="codeSpace" type="anyURI" use="required"/>
         </restriction>
      </simpleContent>
   </complexType>
   <!-- ================================================= -->
   <complexType name="CodeType">
      <annotation>
         <documentation>gml:CodeType is a generalized type to be used for a term, keyword or name.
            It adds a XML attribute codeSpace to a term, where the value of the codeSpace attribute
            (if present) shall indicate a dictionary, thesaurus, classification scheme, authority,
            or pattern for the term.</documentation>
      </annotation>
      <simpleContent>
         <extension base="string">
            <attribute name="codeSpace" type="anyURI"/>
         </extension>
      </simpleContent>
   </complexType>
   <!-- ================================================= -->
   <element name="name" type="gml:CodeType">
      <annotation>
         <documentation>The gml:name property provides a label or identifier for the object,
            commonly a descriptive name. An object may have several names, typically assigned by
            different authorities. gml:name uses the gml:CodeType content model. The authority for a
            name is indicated by the value of its (optional) codeSpace attribute. The name may or
            may not be unique, as determined by the rules of the organization responsible for the
            codeSpace. In common usage there will be one name per authority, so a processing
            application may select the name from its preferred codeSpace.</documentation>
      </annotation>
   </element>
   <!-- ================================================= -->
   <element name="coordinates" type="gml:CoordinatesType">
      <annotation>
         <appinfo>deprecated</appinfo>
      </annotation>
   </element>
   <!-- ================================================= -->
   <complexType name="CoordinatesType">
      <annotation>
         <documentation>This type is deprecated for tuples with ordinate values that are numbers.
            CoordinatesType is a text string, intended to be used to record an array of tuples or
            coordinates. While it is not possible to enforce the internal structure of the string
            through schema validation, some optional attributes have been provided in previous
            versions of GML to support a description of the internal structure. These attributes are
            deprecated. The attributes were intended to be used as follows: Decimal symbol used for
            a decimal point (default="." a stop or period) cs symbol used to separate components
            within a tuple or coordinate string (default="," a comma) ts symbol used to separate
            tuples or coordinate strings (default=" " a space) Since it is based on the XML Schema
            string type, CoordinatesType may be used in the construction of tables of tuples or
            arrays of tuples, including ones that contain mixed text and numeric
            values.</documentation>
      </annotation>
      <simpleContent>
         <extension base="string">
            <attribute name="decimal" type="string" default="."/>
            <attribute name="cs" type="string" default=","/>
            <attribute name="ts" type="string" default=" "/>
         </extension>
      </simpleContent>
   </complexType>
   <!-- ================================================= -->
   <element name="AbstractGeometricPrimitive" type="gml:AbstractGeometricPrimitiveType"
      abstract="true" substitutionGroup="gml:AbstractGeometry">
      <annotation>
         <documentation>The AbstractGeometricPrimitive element is the abstract head of the
            substitution group for all (pre- and user-defined) geometric primitives.</documentation>
      </annotation>
   </element>
   <!-- ================================================= -->
   <element name="AbstractGeometry" type="gml:AbstractGeometryType" abstract="true"
      substitutionGroup="gml:AbstractGML">
      <annotation>
         <documentation>The AbstractGeometry element is the abstract head of the substitution group
            for all geometry elements of GML. This includes pre-defined and user-defined geometry
            elements. Any geometry element shall be a direct or indirect extension/restriction of
            AbstractGeometryType and shall be directly or indirectly in the substitution group of
            AbstractGeometry.</documentation>
      </annotation>
   </element>
   <!-- ================================================= -->
   <element name="AbstractGML" type="gml:AbstractGMLType" abstract="true"
      substitutionGroup="gml:AbstractObject">
      <annotation>
         <documentation>The abstract element gml:AbstractGML is "any GML object having identity". It
            acts as the head of an XML Schema substitution group, which may include any element
            which is a GML feature, or other object, with identity. This is used as a variable in
            content models in GML core and application schemas. It is effectively an abstract
            superclass for all GML objects.</documentation>
      </annotation>
   </element>
   <!-- ================================================= -->
   <element name="LineString" type="gml:LineStringType" substitutionGroup="gml:AbstractCurve">
      <annotation>
         <documentation>A LineString is a special curve that consists of a single segment with
            linear interpolation. It is defined by two or more coordinate tuples, with linear
            interpolation between them. The number of direct positions in the list shall be at least
            two.</documentation>
      </annotation>
   </element>
   <!-- ================================================= -->
   <complexType name="LineStringType">
      <complexContent>
         <extension base="gml:AbstractCurveType">
            <sequence>
               <choice>
                  <choice minOccurs="2" maxOccurs="unbounded">
                     <element ref="gml:pos"/>
                     <!-- <element ref="gml:pointProperty"/>  REMOVED from CoT-NIEM subset -->
                     <!-- <element ref="gml:pointRep"/>       REMOVED from CoT-NIEM subset -->
                  </choice>
                  <!-- <element ref="gml:posList"/>              REMOVED from CoT-NIEM subset -->
                  <!-- <element ref="gml:coordinates"/>          REMOVED from CoT-NIEM subset -->
               </choice>
            </sequence>
         </extension>
      </complexContent>
   </complexType>
   <!-- ================================================= -->
   <complexType name="AbstractCurveType" abstract="true">
      <annotation>
         <documentation>gml:AbstractCurveType is an abstraction of a curve to support the different
            levels of complexity. The curve may always be viewed as a geometric primitive, i.e. is
            continuous.</documentation>
      </annotation>
      <complexContent>
         <extension base="gml:AbstractGeometricPrimitiveType"/>
      </complexContent>
   </complexType>
   <!-- ================================================= -->
   <element name="pointProperty" type="gml:PointPropertyType">
      <annotation>
         <documentation>This property element either references a point via the XLink-attributes or
            contains the point element. pointProperty is the predefined property which may be used
            by GML Application Schemas whenever a GML feature has a property with a value that is
            substitutable for Point.</documentation>
      </annotation>
   </element>
   <!-- ================================================= -->
   <complexType name="PointPropertyType">
      <annotation>
         <documentation>A property that has a point as its value domain may either be an appropriate
            geometry element encapsulated in an element of this type or an XLink reference to a
            remote geometry element (where remote includes geometry elements located elsewhere in
            the same document). Either the reference or the contained element shall be given, but
            neither both nor none.</documentation>
      </annotation>
      <sequence minOccurs="0">
         <element ref="gml:Point"/>
      </sequence>
      <attributeGroup ref="gml:AssociationAttributeGroup"/>
      <attributeGroup ref="gml:OwnershipAttributeGroup"/>
   </complexType>
   <!-- ================================================= -->
   <element name="pointRep" type="gml:PointPropertyType">
      <annotation>
         <appinfo>deprecated</appinfo>
      </annotation>
   </element>
   <!-- ================================================= -->
   <element name="posList" type="gml:DirectPositionListType"/>
   <!-- ================================================= -->
   <complexType name="DirectPositionListType">
      <annotation>
         <documentation>posList instances (and other instances with the content model specified by
            DirectPositionListType) hold the coordinates for a sequence of direct positions within
            the same coordinate reference system (CRS). if no srsName attribute is given, the CRS
            shall be specified as part of the larger context this geometry element is part of,
            typically a geometric object like a point, curve, etc. The optional attribute count
            specifies the number of direct positions in the list. If the attribute count is present
            then the attribute srsDimension shall be present, too. The number of entries in the list
            is equal to the product of the dimensionality of the coordinate reference system (i.e.
            it is a derived value of the coordinate reference system definition) and the number of
            direct positions.</documentation>
      </annotation>
      <simpleContent>
         <extension base="gml:doubleList">
            <attributeGroup ref="gml:SRSReferenceGroup"/>
            <attribute name="count" type="positiveInteger"/>
         </extension>
      </simpleContent>
   </complexType>
   <!-- ================================================= -->
   <element name="AbstractCurve" type="gml:AbstractCurveType" abstract="true"
      substitutionGroup="gml:AbstractGeometricPrimitive">
      <annotation>
         <documentation>The AbstractCurve element is the abstract head of the substitution group for
            all (continuous) curve elements.</documentation>
      </annotation>
   </element>
   <!-- ================================================= -->
   <element name="LinearRing" type="gml:LinearRingType" substitutionGroup="gml:AbstractRing">
      <annotation>
         <documentation>A LinearRing is defined by four or more coordinate tuples, with linear
            interpolation between them; the first and last coordinates shall be coincident. The
            number of direct positions in the list shall be at least four.</documentation>
      </annotation>
   </element>
   <!-- ================================================= -->
   <complexType name="LinearRingType">
      <complexContent>
         <extension base="gml:AbstractRingType">
            <sequence>
               <choice>
                  <choice minOccurs="4" maxOccurs="unbounded">
                     <element ref="gml:pos"/>
                     <!-- <element ref="gml:pointProperty"/>  REMOVED from CoT-NIEM subset -->
                     <!-- <element ref="gml:pointRep"/>       REMOVED from CoT-NIEM subset -->
                  </choice>
                  <!-- <element ref="gml:posList"/>              REMOVED from CoT-NIEM subset -->
                  <!-- <element ref="gml:coordinates"/>          REMOVED from CoT-NIEM subset -->
               </choice>
            </sequence>
         </extension>
      </complexContent>
   </complexType>
   <!-- ================================================= -->
   <complexType name="AbstractRingType" abstract="true">
      <sequence/>
   </complexType>
   <!-- ================================================= -->
   <element name="AbstractRing" type="gml:AbstractRingType" abstract="true"
      substitutionGroup="gml:AbstractObject">
      <annotation>
         <documentation>An abstraction of a ring to support surface boundaries of different
            complexity. The AbstractRing element is the abstract head of the substituition group for
            all closed boundaries of a surface patch.</documentation>
      </annotation>
   </element>
   <!-- ================================================= -->
   <element name="Polygon" type="gml:PolygonType" substitutionGroup="gml:AbstractSurface">
      <annotation>
         <documentation>A Polygon is a special surface that is defined by a single surface patch
            (see D.3.6). The boundary of this patch is coplanar and the polygon uses planar
            interpolation in its interior. The elements exterior and interior describe the surface
            boundary of the polygon.</documentation>
      </annotation>
   </element>
   <!-- ================================================= -->
   <complexType name="PolygonType">
      <complexContent>
         <extension base="gml:AbstractSurfaceType">
            <sequence>
               <element ref="gml:exterior" minOccurs="0"/>
               <!-- <element ref="gml:interior" minOccurs="0" maxOccurs="unbounded"/> REMOVED from CoT-NIEM subset -->
            </sequence>
         </extension>
      </complexContent>
   </complexType>
   <!-- ================================================= -->
   <complexType name="AbstractSurfaceType" abstract="true">
      <annotation>
         <documentation>gml:AbstractSurfaceType is an abstraction of a surface to support the
            different levels of complexity. A surface is always a continuous region of a
            plane.</documentation>
      </annotation>
      <complexContent>
         <extension base="gml:AbstractGeometricPrimitiveType"/>
      </complexContent>
   </complexType>
   <!-- ================================================= -->
   <element name="exterior" type="gml:AbstractRingPropertyType">
      <annotation>
         <documentation>A boundary of a surface consists of a number of rings. In the normal 2D
            case, one of these rings is distinguished as being the exterior boundary. In a general
            manifold this is not always possible, in which case all boundaries shall be listed as
            interior boundaries, and the exterior will be empty.</documentation>
      </annotation>
   </element>
   <!-- ================================================= -->
   <complexType name="AbstractRingPropertyType">
      <annotation>
         <documentation>A property with the content model of gml:AbstractRingPropertyType
            encapsulates a ring to represent the surface boundary property of a
            surface.</documentation>
      </annotation>
      <sequence>
         <element ref="gml:LinearRing"/>  <!-- changed from AbstractRing for CoT-NIEM -->
      </sequence>
   </complexType>
   <!-- ================================================= -->
   <element name="interior" type="gml:AbstractRingPropertyType">
      <annotation>
         <documentation>A boundary of a surface consists of a number of rings. The "interior" rings
            separate the surface / surface patch from the area enclosed by the
            rings.</documentation>
      </annotation>
   </element>
   <!-- ================================================= -->
   <element name="AbstractSurface" type="gml:AbstractSurfaceType" abstract="true"
      substitutionGroup="gml:AbstractGeometricPrimitive">
      <annotation>
         <documentation>The AbstractSurface element is the abstract head of the substitution group
            for all (continuous) surface elements.</documentation>
      </annotation>
   </element>
   <!-- ================================================= -->
   <complexType name="MeasureType">
      <annotation>
         <documentation>gml:MeasureType supports recording an amount encoded as a value of XML
            Schema double, together with a units of measure indicated by an attribute uom, short for
            "units Of measure". The value of the uom attribute identifies a reference system for the
            amount, usually a ratio or interval scale.</documentation>
      </annotation>
      <simpleContent>
         <extension base="double">
            <attribute name="uom" type="gml:UomIdentifier" use="required"/>
         </extension>
      </simpleContent>
   </complexType>
   <!-- ================================================= -->
   <simpleType name="UomIdentifier">
      <annotation>
         <documentation>The simple type gml:UomIdentifer defines the syntax and value space of the
            unit of measure identifier.</documentation>
      </annotation>
      <union memberTypes="gml:UomSymbol gml:UomURI"/>
   </simpleType>
   <!-- ================================================= -->
   <simpleType name="UomSymbol">
      <annotation>
         <documentation>This type specifies a character string of length at least one, and
            restricted such that it must not contain any of the following characters: ":" (colon), "
            " (space), (newline), (carriage return), (tab). This allows values corresponding to
            familiar abbreviations, such as "kg", "m/s", etc. It is recommended that the symbol be
            an identifier for a unit of measure as specified in the "Unified Code of Units of
            Measure" (UCUM) (http://aurora.regenstrief.org/UCUM). This provides a set of symbols and
            a grammar for constructing identifiers for units of measure that are unique, and may be
            easily entered with a keyboard supporting the limited character set known as 7-bit
            ASCII. ISO 2955 formerly provided a specification with this scope, but was withdrawn in
            2001. UCUM largely follows ISO 2955 with modifications to remove ambiguities and other
            problems.</documentation>
      </annotation>
      <restriction base="string">
         <pattern value="[^: \n\r\t]+"/>
      </restriction>
   </simpleType>
   <!-- ================================================= -->
   <simpleType name="UomURI">
      <annotation>
         <documentation>This type specifies a URI, restricted such that it must start with one of
            the following sequences: "#", "./", "../", or a string of characters followed by a ":".
            These patterns ensure that the most common URI forms are supported, including absolute
            and relative URIs and URIs that are simple fragment identifiers, but prohibits certain
            forms of relative URI that could be mistaken for unit of measure symbol . NOTE It is
            possible to re-write such a relative URI to conform to the restriction (e.g. "./m/s").
            In an instance document, on elements of type gml:MeasureType the mandatory uom attribute
            shall carry a value corresponding to either - a conventional unit of measure symbol, - a
            link to a definition of a unit of measure that does not have a conventional symbol, or
            when it is desired to indicate a precise or variant definition.</documentation>
      </annotation>
      <restriction base="anyURI">
         <pattern value="([a-zA-Z][a-zA-Z0-9\-\+\.]*:|\.\./|\./|#).*"/>
      </restriction>
   </simpleType>
   <!-- ================================================= -->
   <complexType name="LengthType">
      <annotation>
         <documentation>This is a prototypical definition for a specific measure type defined as a
            vacuous extension (i.e. aliases) of gml:MeasureType. In this case, the content model
            supports the description of a length (or distance) quantity, with its units. The unit of
            measure referenced by uom shall be suitable for a length, such as metres or
            feet.</documentation>
      </annotation>
      <simpleContent>
         <extension base="gml:MeasureType"/>
      </simpleContent>
   </complexType>
   <complexType name="AngleType">
      <simpleContent>
         <extension base="gml:MeasureType"/>
      </simpleContent>
   </complexType>
   
</schema>