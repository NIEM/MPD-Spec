<?xml version="1.0" encoding="UTF-8"?>
<xs:schema 
    ct:conformanceTargets="http://reference.niem.gov/niem/specification/naming-and-design-rules/3.0/#ExtensionSchemaDocument"
    targetNamespace="http://example.com/cot-niem/0.9/" version="1"
    xmlns:cot="http://example.com/cot-niem/0.9/"
    xmlns:cotcd="http://example.com/cot-niem/0.9/codes/"
    xmlns:mof="http://example.com/milops/1.1/"
    xmlns:nc="http://release.niem.gov/niem/niem-core/3.0/"
    xmlns:geo="http://release.niem.gov/niem/adapters/geospatial/3.0/"
    xmlns:gml="http://www.opengis.net/gml/3.2"
    xmlns:niem-xs="http://release.niem.gov/niem/proxy/xsd/3.0/" 
    xmlns:structures="http://release.niem.gov/niem/structures/3.0/" 
    xmlns:xs="http://www.w3.org/2001/XMLSchema" 
    xmlns:appinfo="http://release.niem.gov/niem/appinfo/3.0/" 
    xmlns:ct="http://release.niem.gov/niem/conformanceTargets/3.0/" 
    xmlns:term="http://release.niem.gov/niem/localTerminology/3.0/"
    elementFormDefault="qualified"> 

    <xs:annotation>
        <xs:documentation>
            This extension schema defines the elements and types needed to create the CoT-NIEM IEPD
            based on the MilOps-Future generic Event object.
        </xs:documentation>
        <xs:appinfo>
            <term:LocalTerm term="CoT"     literal="Cursor-on-Target"/>
            <term:LocalTerm term="DXF"     literal="Drawing Interchange Format"/>
            <term:LocalTerm term="FOV"     literal="Field Of View"/>
            <term:LocalTerm term="MIME"    literal="Multipurpose Internet Mail Extensions"/>
            <term:LocalTerm term="OPEX"    literal="Operation Exercise"/>
            <term:LocalTerm term="STANAG"  literal="Standardization Agreement"/>
            <term:LocalTerm term="WGS84"   literal="World Geodetic System 84"/>
        </xs:appinfo>
    </xs:annotation>

    <xs:import schemaLocation="./cot-niem-codes.xsd" namespace="http://example.com/cot-niem/0.9/codes/"/>
    <xs:import schemaLocation="./milops-future.xsd" namespace="http://example.com/milops/1.1/"/>
    
    <xs:import schemaLocation="../niem/niem-core/3.0/niem-core.xsd" namespace="http://release.niem.gov/niem/niem-core/3.0/"/>
    <xs:import schemaLocation="../niem/adapters/geospatial/3.0/geospatial.xsd" namespace="http://release.niem.gov/niem/adapters/geospatial/3.0/"/>
    <xs:import schemaLocation="../niem/proxy/xsd/3.0/xs.xsd" namespace="http://release.niem.gov/niem/proxy/xsd/3.0/"/>
    <xs:import schemaLocation="../niem/structures/3.0/structures.xsd" namespace="http://release.niem.gov/niem/structures/3.0/"/>
    
    <xs:import schemaLocation="../niem/external/ogc/gml/3.2.1/gml.xsd" namespace="http://www.opengis.net/gml/3.2" appinfo:externalImportIndicator="true">
        <xs:annotation>
            <xs:documentation>Geography Markup Language (GML) version 3.2.1 schemas.  See http://www.opengeospatial.org OGC document 07-036 for documentation: "The Geography Markup Language (GML) was originally developed within the Open Geospatial Consortium, Inc. (OGC). ISO 19136 was prepared by ISO/TC 211 jointly with the OGC."  See http://schemas.opengis.net/gml/ for schemas.</xs:documentation>
        </xs:annotation>
    </xs:import>
    
 <!-- The generic Event object from NIEM MilOps-Future provides more choices than we want in CoT-NIEM. For that reason we
      define a restriction of the generic EventType and then use it as the base type for the added CoT properties. -->

    <xs:complexType name="EventBaseType">
        <xs:annotation><xs:documentation>
            A data type for the existance of a process or object at a location during a time interval.
        </xs:documentation></xs:annotation>
        <xs:complexContent>
            <xs:restriction base="mof:EventType">
                <xs:sequence>
                    <xs:element ref="cot:EventID"/> 
                    <xs:element ref="cot:EventTypeCode"/>
                    <xs:element ref="mof:EventLocation"/> 
                    <xs:element ref="mof:EventValidityDateTimeRange"/>
                    <xs:element ref="mof:EventMessageDateTime"/>   
                    <xs:element ref="mof:EventMotion" minOccurs="0"/> 
                    <xs:element ref="mof:EventRelativeOrientation" minOccurs="0"/>
                    <xs:element ref="mof:EventContact" minOccurs="0"/>
                    <xs:element ref="mof:EventComment" minOccurs="0"/>
                </xs:sequence>
                <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
            </xs:restriction>
        </xs:complexContent>
    </xs:complexType>
    
 <!-- cot:EventID is like the MilOps-Future EventID, but it appears exactly once and does not have the AuthorityURI property -->
     
    <xs:element name="EventID" type="cot:EventIdentificationType" substitutionGroup="mof:EventID">
        <xs:annotation><xs:documentation>
            An identification for the process or object described in a CoT event object. Different CoT Event objects
            may have the same EventID value if they all describe the same process or object.  A single EventID must not
            be used to identify different processes or objects.
        </xs:documentation></xs:annotation>
    </xs:element>
    <xs:complexType name="EventIdentificationType">
        <xs:annotation><xs:documentation>
            A data type for a representation of an identity as a single identifier.  Does not have a property
            for the identiy-assigning authority. All values are from the same CoT identifier space.
        </xs:documentation></xs:annotation>
        <xs:complexContent>
            <xs:restriction base="nc:IdentificationType">
                <xs:sequence>
                    <xs:element ref="nc:IdentificationID" minOccurs="1" maxOccurs="1"/>
                </xs:sequence>
                <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
            </xs:restriction>
        </xs:complexContent>
    </xs:complexType>
    
 <!-- cot:EventTypeCode appears exactly once and does not have the codespace property. -->
    
    <xs:element name="EventTypeCode" type="cotcd:EventTypeCodeType" substitutionGroup="mof:EventCategoryAbstract">
        <xs:annotation><xs:documentation>
            A type or kind of an event.
        </xs:documentation></xs:annotation>
    </xs:element> 
     
 <!-- Here is the CoT-NIEM Event object, including all of the CoT 2.0 core and stable subschemas.
      Of those subschemas:
      * Shape     is captured in nc:LocationArea
      * Track     is mof:EventMotion
      * Spatial   is mof:RelativeOrientation
      * Remarks   is mof:EventComment
      * UID       is cot:EventExternalIDList
      * Link      is cot:EventLink
      * Image     is cot:EventImage
      * Sensor    is cot:EventSensor
      * Contact   is cot:EventContact
      * Request   is cot:EventRequest
      * Flowtag   is cot:EventMessageFlowtag  -->
    
    <xs:element name="Event" type="cot:EventType">
        <xs:annotation><xs:documentation>
            A process or object existing at a location during a time interval.
        </xs:documentation></xs:annotation>
    </xs:element>
    
    <xs:complexType name="EventType">
        <xs:annotation><xs:documentation>
            A data type for the existance of a process or object at a location during a time interval.
        </xs:documentation></xs:annotation>
        <xs:complexContent>
            <xs:extension base="cot:EventBaseType">
                <xs:sequence>
                    <xs:element ref="cot:EventTypeExtendedCode" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="cot:EventExternalIDList" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="cot:EventStandardIdentityCode" minOccurs="0" maxOccurs="1"/>                     
                    <xs:element ref="cot:EventOPEXCode" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="cot:EventMessageDelivery" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="cot:EventMessageAccessText" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="cot:EventLink" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="cot:EventImage" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="cot:EventSensor" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="cot:EventRequest" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="cot:EventMessageFlowtag" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element ref="cot:EventCommunityExtensions" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:element name="EventTypeExtendedCode" type="mof:CodespaceCodePairType">
        <xs:annotation><xs:documentation>
            A community-specific extension to the type or kind of an event.
        </xs:documentation></xs:annotation>
    </xs:element>
    
    <xs:element name="EventExternalIDList" type="cot:EventExternalIDListType">
        <xs:annotation><xs:documentation>
            A list of additional identifiers for an event.
        </xs:documentation></xs:annotation>
    </xs:element>
    <xs:complexType name="EventExternalIDListType">
        <xs:annotation><xs:documentation>
            A data type for a list of event identifiers.  Identifiers in the list may record the
            authority that assigned the identifer to the event.
        </xs:documentation></xs:annotation>
        <xs:complexContent>
            <xs:extension base="structures:ObjectType">
                <xs:sequence>
                    <xs:element ref="mof:EventID" minOccurs="1" maxOccurs="unbounded"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:element name="EventStandardIdentityCode" type="mof:StandardIdentityCodeType">
        <xs:annotation><xs:documentation>
            A STANAG 1241 standard identity code for an event.
        </xs:documentation></xs:annotation>
    </xs:element>
    
    <xs:element name="EventOPEXCode" type="mof:OPEXCodeType">
        <xs:annotation><xs:documentation>
            A code for the operational status of an event.
        </xs:documentation></xs:annotation>
    </xs:element>

    <xs:element name="EventMessageDelivery" type="cot:MessageDeliveryType">
        <xs:annotation><xs:documentation>
            A set of delivery constraints for an Event as it passes from source through intermediaries
            to consumer.
        </xs:documentation></xs:annotation>
    </xs:element>
    <xs:complexType name="MessageDeliveryType">
        <xs:annotation><xs:documentation>
            A data type for the delivery constraints for an Event as it passes from source through 
            intermediaries to consumer.
        </xs:documentation></xs:annotation>
        <xs:complexContent>
            <xs:extension base="structures:ObjectType">
                <xs:sequence>
                    <xs:element ref="cot:DeliveryPriorityNumeric" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="cot:DeliveryOvertakingCode" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="cot:DeliveryAssuranceCode" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:element name="DeliveryPriorityNumeric" type="cot:DeliveryPriorityNumericType">
        <xs:annotation><xs:documentation>
            A queuing and processing order for Event objects at an intermediary. Events with a
            higher value are to be processed before those with a lower value.
        </xs:documentation></xs:annotation>
    </xs:element>
    <xs:complexType name="DeliveryPriorityNumericType">
        <xs:annotation><xs:documentation>
            A data type for the queuing and processing order for Event objects at an intermediary. 
            Events with a higher value are to be processed before those with a lower value.
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="cot:DeliveryPriorityNumericSimpleType">
                <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="DeliveryPriorityNumericSimpleType">
        <xs:annotation><xs:documentation>
            A data type for the queuing and processing order for Event objects at an intermediary. 
            Events with a higher value are to be processed before those with a lower value.
        </xs:documentation></xs:annotation>
        <xs:restriction base="xs:integer">
            <xs:minInclusive value="0"/>
            <xs:maxInclusive value="9"/>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:element name="DeliveryOvertakingCode" type="cotcd:DeliveryOvertakingCodeType">
        <xs:annotation><xs:documentation>
            A value indicating how two events with the same EventID are to be reconciled 
            upon arrival.
        </xs:documentation></xs:annotation>
    </xs:element>
   
    <xs:element name="DeliveryAssuranceCode" type="cotcd:DeliveryAssuranceCodeType">
        <xs:annotation><xs:documentation>
            A code indicating the delivery effort required from intermediaries for this Event.
            Events from sources that continually send updates (e.g. blue force tracks) or that are sent for
            information purposes may be dropped.  Events that are singletons (sent only once) and are
            critical require guaranteed delivery.
        </xs:documentation></xs:annotation>
    </xs:element>
       
    <xs:element name="EventMessageAccessText" type="niem-xs:string">
        <xs:annotation><xs:documentation>
            An indication of who is permitted to have access to this Event object.
        </xs:documentation></xs:annotation>
    </xs:element>
    
    <xs:element name="LocationEllipse" type="cot:EllipseType" substitutionGroup="mof:LocationEllipse">
        <xs:annotation><xs:documentation>
            An area region described by an ellipse specified by a point, major axis, minor axis and rotation,
            using WGS84, meters, and decimal degrees, with optional preference order.
        </xs:documentation></xs:annotation>
    </xs:element>
    <xs:complexType name="EllipseType">
        <xs:annotation><xs:documentation>
            A data type for area region described by an ellipse specified by a point, major axis, minor axis 
            and rotation, using WGS84, meters, and decimal degrees, with optional preference order.
        </xs:documentation></xs:annotation>
        <xs:complexContent>
            <xs:extension base="mof:EllipseType">
                <xs:sequence>
                    <xs:element ref="cot:EllipseHeightValue" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute ref="cot:preferenceOrderValue"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:attribute name="preferenceOrderValue" type="xs:integer">
        <xs:annotation><xs:documentation>
            A numeric value that states the preferred ordering of multiple location areas.
            The location area with the highest preferenceOrderValue  is the most desirable.
            Any location area with a preferenceOrderValue is more desirable than one without.
        </xs:documentation></xs:annotation>
    </xs:attribute>
    
    <xs:element name="EllipseHeightValue" type="niem-xs:nonNegativeInteger">
        <xs:annotation><xs:documentation>
            A "height" of the ellipse used to make the flat object encompass a volume.
        </xs:documentation></xs:annotation>
    </xs:element>
    
    <xs:element name="LocationLineString" type="cot:LineStringType" substitutionGroup="mof:LocationLineString">
        <xs:annotation><xs:documentation>
            A zero-size area region described by a series of connected line segments, using WGS84 
            coordinates, with optional preference order.
        </xs:documentation></xs:annotation>
    </xs:element>
    <xs:complexType name="LineStringType">
        <xs:annotation><xs:documentation>
            A data type for a zero-size area region described by a series of connected line segments, 
            using WGS84 coordinates, with optional preference order.
        </xs:documentation></xs:annotation>
        <xs:complexContent>
            <xs:extension base="mof:LineStringType">
                <xs:attribute ref="cot:preferenceOrderValue"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:element name="LocationExternalPolygon" type="cot:ExternalPolygonType" substitutionGroup="mof:LocationExternalPolygon">
        <xs:annotation><xs:documentation>
            An area region described by a polygon with no interior region, using WGS84 coordinates, 
            with optional preference order.
        </xs:documentation></xs:annotation>
    </xs:element>
    <xs:complexType name="ExternalPolygonType">
        <xs:annotation><xs:documentation>
            A data type for an area region described by a polygon with no interior region, using 
            WGS84 coordinates, with optional preference order.
        </xs:documentation></xs:annotation>
        <xs:complexContent>
            <xs:extension base="mof:ExternalPolygonType">
                <xs:attribute ref="cot:preferenceOrderValue"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:element name="LocationDXFShape" type="cot:LocationDXFType" substitutionGroup="nc:AreaRegion">
        <xs:annotation><xs:documentation>
            An area region described by DFX data in XML format, with optional preference order.
        </xs:documentation></xs:annotation>
    </xs:element>
    <xs:complexType name="LocationDXFType">
        <xs:annotation><xs:documentation>
            A data type for an area region described by DFX data in XML format, with optional preference order.
        </xs:documentation></xs:annotation>
        <xs:complexContent>
            <xs:extension base="structures:ObjectType">
                <xs:sequence>
                    <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##other" processContents="lax"/>
                </xs:sequence>
                <xs:attribute ref="cot:preferenceOrderValue" use="optional"/>
             </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:element name="EventLink" type="cot:EventLinkType">
        <xs:annotation><xs:documentation>
            A unidirectional relationship from the process or object described by an Event, to
            the process or object described by another Event, or to an arbitrary resource.
        </xs:documentation></xs:annotation>
    </xs:element>
    <xs:complexType name="EventLinkType">
        <xs:annotation><xs:documentation>
            A data type for a unidirectional relationship from the process or object described by 
            an Event, to the process or object described by another Event, or to an arbitrary resource.
        </xs:documentation></xs:annotation>
        <xs:complexContent>
            <xs:extension base="structures:ObjectType">
                <xs:sequence>
                    <xs:element ref="cot:LinkedEventID"/>
                    <xs:element ref="cot:LinkedEventTypeCode"/>
                    <xs:element ref="cot:EventLinkRelationCode"/>
                    <xs:element ref="cot:EventLinkURI" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="nc:DocumentFormatText" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="nc:CommentText" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="cot:LinkedEvent" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:element name="LinkedEventID" type="cot:EventIdentificationType">
        <xs:annotation><xs:documentation>
            An identifier for a referenced process or object.
        </xs:documentation></xs:annotation>
    </xs:element>
    
    <xs:element name="LinkedEventTypeCode" type="cotcd:EventTypeCodeType">
        <xs:annotation><xs:documentation>
            A type or kind of a linked event.
        </xs:documentation></xs:annotation>
    </xs:element>
    
    <xs:element name="EventLinkRelationCode" type="cotcd:EventLinkRelationCodeType">
        <xs:annotation><xs:documentation>
            A kind of link from an Event to an Event or resource.
        </xs:documentation></xs:annotation>
    </xs:element>
    
    <xs:element name="EventLinkURI" type="niem-xs:anyURI">
        <xs:annotation><xs:documentation>
            A URI by which the linked event may be retreived.
        </xs:documentation></xs:annotation>
    </xs:element>
    
    <xs:element name="LinkedEvent" type="cot:EventType">
        <xs:annotation><xs:documentation>
            A process or object existing at a location during a time interval;
            the object referenced by a link.
        </xs:documentation></xs:annotation>
    </xs:element>
    
    <xs:element name="EventImage" type="cot:EventImageType">
        <xs:annotation><xs:documentation>
            An image associated with an event.
        </xs:documentation></xs:annotation>
    </xs:element>
    <xs:complexType name="EventImageType">
        <xs:annotation><xs:documentation>
            A data type for an image associated with an event.
        </xs:documentation></xs:annotation>
        <xs:complexContent>
            <xs:extension base="structures:ObjectType">
                <xs:sequence>
                    <xs:element ref="cot:ImageNITFTypeCode" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="cot:ImageGeoregisteredIndicator" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="cot:ImageSourceEventID" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="cot:ImageResolutionValue" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="cot:FOVValue" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="cot:ImageAnalysisAvailibilityIndicator" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="cot:MIMEContentCode" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="nc:ImageWidthValue" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="nc:ImageHeightValue" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="cot:ImageProductionReasonText" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="cot:ImageDataBandNumeric" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="cot:ImageSupplimentalMIMETypeList" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="cot:ImageQualityText" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="cot:ApparentNorthAzimuthValue" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="cot:ImageDataSizeValue" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="cot:ImageDataURI" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="nc:Base64BinaryObject" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:element name="ImageNITFTypeCode" type="niem-xs:string">
        <xs:annotation><xs:documentation>
            A kind of image. Taken from the NITF specification. Examples: SL - side-looking radar, 
            TI - thermal infrared, FL - forward looking infrared, RD - radar, EO - electro-optical, 
            OP - optical, HR - high resolution radar, HS - hyperspectral, CP - color frame photography, 
            BP - black/white frame photography, SAR - synthetic aperture radar, SARIQ - SAR radio hologram, 
            IR - infrared, MS - multispectral
        </xs:documentation></xs:annotation>
    </xs:element>
    
    <xs:element name="ImageGeoregisteredIndicator" type="niem-xs:boolean" appinfo:deprecated="true">
        <xs:annotation><xs:documentation>
            True if this image has been properly geo-registered; false otherwise.  Deprecated property.
        </xs:documentation></xs:annotation>
    </xs:element>
    
    <xs:element name="ImageSourceEventID" type="cot:EventIdentificationType">
        <xs:annotation><xs:documentation>
            An identifier for the source of this image. Specifically, the CoT UID of the producer. 
            (The intention is to indicate equipment type used to collect imagery, not organization 
            owning image.)
        </xs:documentation></xs:annotation>
    </xs:element>
    
    <xs:element name="ImageResolutionValue" type="niem-xs:decimal">
        <xs:annotation><xs:documentation>
            A value of the image product resolution, expressed in meters per pixel.
        </xs:documentation></xs:annotation>
    </xs:element>
    
    <xs:element name="ImageAnalysisAvailibilityIndicator" type="niem-xs:boolean" appinfo:deprecated="true">
        <xs:annotation><xs:documentation>
            True if image analysis (e.g., markup) is available; false otherwise.  Deprecated property.
        </xs:documentation></xs:annotation>
    </xs:element>
    
    <xs:element name="MIMEContentCode" type="niem-xs:token">
        <xs:annotation><xs:documentation>
            A kind of representation for an attachment, taken from
            http://www.iana.org/assignments/media-types/index.html.
        </xs:documentation></xs:annotation>
    </xs:element>
    
    <xs:element name="ImageProductionReasonText" type="niem-xs:string">
        <xs:annotation><xs:documentation>
            A reason why an image was originally produced (e.g. BHA, BDA, ISR, ...).
        </xs:documentation></xs:annotation>
    </xs:element>
    
    <xs:element name="ImageDataBandNumeric" type="niem-xs:nonNegativeInteger">
        <xs:annotation><xs:documentation>
            A number of data bands within an image. For example, an RGB image has 
            3 bands (Red, Green, Blue bands/channels)
        </xs:documentation></xs:annotation>
    </xs:element>
    
    <xs:element name="ImageSupplimentalMIMETypeList" type="niem-xs:string">
        <xs:annotation><xs:documentation>
            A list of kinds of representation, used when MIMEContentCode describes a
            a container type (e.g., image/x-nitf21).  A comma-separated list of the mime 
            types of the elements in the composite image.
        </xs:documentation></xs:annotation>
    </xs:element>
    
    <xs:element name="ImageQualityText" type="niem-xs:string">
        <xs:annotation><xs:documentation>
            An expression of how the tradeoff between image quality and compression were 
            made for this image.  This is usually a 'relative' quality measure, an unsigned 
            floating point value between 0.0 (highest compression) and 1.0 (highest quality). 
            Implementers should attempt to map this scalar value to an approximate linear 
            progression of visual quality as determined on a typical sample image.  If the 
            field's value carries an explicit sign (+/-) including +0 or -0, it represents 
            the exact value expressed in a range appropriate to the compression type expressed 
            in 'mime' or 'mimecsv'.  For example,  with 'image/x-eagleeye' the EagleEye clip 
            setting, the quality setting may range from -4096.0 to +4096.0.
        </xs:documentation></xs:annotation>
    </xs:element>
    
    <xs:element name="ImageDataSizeValue" type="niem-xs:nonNegativeInteger">
        <xs:annotation><xs:documentation>
            An approximate size of the image data in bytes.
        </xs:documentation></xs:annotation>
    </xs:element>
    
    <xs:element name="ImageDataURI" type="niem-xs:anyURI">
        <xs:annotation><xs:documentation>
            A URI for a resource that is the image data.
        </xs:documentation></xs:annotation>
    </xs:element>
       
    <xs:element name="EventSensor" type="cot:SensorType">
        <xs:annotation><xs:documentation>
            A steerable, staring sensor such as an EO, IR, or Radar sensor.
        </xs:documentation></xs:annotation>
    </xs:element>
    <xs:complexType name="SensorType">
        <xs:annotation><xs:documentation>
            A data type for a steerable, staring sensor such as an EO, IR, or Radar sensor.
        </xs:documentation></xs:annotation>
        <xs:complexContent>
            <xs:extension base="structures:ObjectType">
                <xs:sequence>
                    <xs:element ref="mof:Orientation"/>
                    <xs:element ref="cot:FOVValue" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="cot:VerticalFOVValue" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="cot:ApparentNorthAzimuthValue" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="cot:SensorTypeCode" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="cot:SensorTypeExtendedCode" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="cot:SensorModelName" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="cot:TargetDistanceValue" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:element name="FOVValue" type="nc:Degree360Type">
        <xs:annotation><xs:documentation>
            An angular measure of the sensor's horizontal field of view (beam width) expressed in degrees.  
            (This measurement is made from visible edge to visible edge, not from center of field 
            to edge.)
        </xs:documentation></xs:annotation>
    </xs:element>
    
    <xs:element name="VerticalFOVValue" type="nc:Degree360Type">
        <xs:annotation><xs:documentation>
            An angular measure of the sensor's vertical field of view (beam width) expressed in degrees.  
            (This measurement is made from visible edge to visible edge, not from center of field 
            to edge.) 
        </xs:documentation></xs:annotation>
    </xs:element>
    
    <xs:element name="ApparentNorthAzimuthValue" type="nc:Degree360Type">
        <xs:annotation><xs:documentation>
            An angular measure of the apparent direction of "north" on the sensor image.  As sensor and platform 
            orientation change, so does the apparent direction of "north".  This attribute indicates the 
            orientation (in degrees clockwise) of a "north" arrow if it were painted on the image.  Zero 
            indicates that the north arrow would be oriented "up" on the image, 90 indicates the north 
            arrow would point to the right.
        </xs:documentation></xs:annotation>
    </xs:element>
    
    <xs:element name="SensorTypeCode" type="niem-xs:string">
        <xs:annotation><xs:documentation>
            A code indicating the type of a sensor.
        </xs:documentation></xs:annotation>
    </xs:element>
    
    <xs:element name="SensorTypeExtendedCode" type="mof:CodespaceCodePairType">
        <xs:annotation><xs:documentation>
            A community-specific extension to the type of a sensor.
        </xs:documentation></xs:annotation>
    </xs:element>
    
    <xs:element name="SensorModelName" type="niem-xs:string">
        <xs:annotation><xs:documentation>
            A model name of a sensor; e.g. LANTRIN, TARPS
        </xs:documentation></xs:annotation>
    </xs:element>
    
    <xs:element name="TargetDistanceValue" type="mof:DistanceValueType">
        <xs:annotation><xs:documentation>
            A distance from the sensor to the target, measured in meters. This is the distance from 
            the image plane to the object occupying the center pixel of the image array.
        </xs:documentation></xs:annotation>
    </xs:element>
    
    <xs:element name="ContactRadio" type="cot:ContactRadioType" substitutionGroup="nc:ContactMeans">
        <xs:annotation>
            <xs:documentation>A method of contacting a person or organization by messages over a radio.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:complexType name="ContactRadioType">
        <xs:annotation>
            <xs:documentation>A data type for a method of contacting a person or organization by messages over a radio.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="nc:ContactRadioType">
                <xs:sequence>
                    <xs:element ref="cot:ContactRadioModulationText" minOccurs="0"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
   
    <xs:element name="ContactRadioModulationText" type="niem-xs:string">
        <xs:annotation><xs:documentation>
            A string describing the modulation type for a radio frequency.
        </xs:documentation></xs:annotation>
    </xs:element>
       
    <xs:element name="EventRequest" type="cot:EventRequestType">
        <xs:annotation><xs:documentation>
            A request for the performance of some function.
        </xs:documentation></xs:annotation>
    </xs:element>
    <xs:complexType name="EventRequestType">
        <xs:annotation><xs:documentation>
            A data type for a request for the performance of some function.
        </xs:documentation></xs:annotation>
        <xs:complexContent>
            <xs:extension base="structures:ObjectType">
                <xs:sequence>
                    <xs:element ref="cot:ResponseDestinationEndpointText"/>
                    <xs:element ref="cot:RequestResponseDeadlineDateTime" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="cot:RequestDestinationID" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="cot:RequestAuthorityID" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:element name="ResponseDestinationEndpointText" type="cot:NetworkPacketDestinationType">
        <xs:annotation><xs:documentation>
            A network endpoint address to which responses (e.g. status messages) should be delivered.
            For example, "tcp://adocs.aoc.af.mil:18000".
        </xs:documentation></xs:annotation>
    </xs:element>
    <xs:complexType name="NetworkPacketDestinationType">
        <xs:annotation><xs:documentation>
            A data type for a network endpoint address.
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="cot:NetworkPacketDestinationSimpleType">
                <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
    <xs:simpleType name="NetworkPacketDestinationSimpleType">
        <xs:annotation><xs:documentation>
            A data type for a network endpoint address.
        </xs:documentation></xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="(udp|tcp)://[^:]*:[0-9]+"/>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:element name="RequestResponseDeadlineDateTime" type="niem-xs:dateTime">
        <xs:annotation><xs:documentation>
            A date time for a deadline by which an entity must respond to a request.
        </xs:documentation></xs:annotation>
    </xs:element>
    
    <xs:element name="RequestDestinationID" type="cot:EventIdentificationType">
        <xs:annotation><xs:documentation>
            An identifier for the entity that responds to a request.  The CoT UID
            of the responder.
        </xs:documentation></xs:annotation>
    </xs:element>  
    
    <xs:element name="RequestAuthorityID" type="cot:EventIdentificationType">
        <xs:annotation><xs:documentation>
            An identity for the entity that authorized a request.  The CoT UID
            of the authorizing entity.
        </xs:documentation></xs:annotation>
    </xs:element>  
    
    <xs:element name="EventMessageFlowtag" type="cot:MessageFlowtagType">
        <xs:annotation><xs:documentation>
            A processsing timestamp to show the systems that have processed a message.
        </xs:documentation></xs:annotation>
    </xs:element>
    <xs:complexType name="MessageFlowtagType">
        <xs:annotation><xs:documentation>
            A data type for a processsing timestamp to show the systems that have
            processed a message.
        </xs:documentation></xs:annotation>
        <xs:complexContent>
            <xs:extension base="structures:ObjectType">
                <xs:sequence>
                    <xs:element ref="nc:DateTime"/>
                    <xs:element ref="cot:SystemName"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:element name="SystemName" type="cot:SystemNameType">
        <xs:annotation><xs:documentation>
            A name of an automated information system.
        </xs:documentation></xs:annotation>
    </xs:element>
    <xs:complexType name="SystemNameType">
        <xs:annotation><xs:documentation>
            A data type for a name of an automated information system.  Constrained to match the
            NMTOKEN pattern, because CoT 2.0 uses these values as attribute names.
        </xs:documentation></xs:annotation>
        <xs:simpleContent>
            <xs:extension base="xs:NMTOKEN">
                <xs:attributeGroup ref="structures:SimpleObjectAttributeGroup"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>
       
    <xs:element name="EventCommunityExtensions" type="cot:CommunityExtensionsType">
        <xs:annotation><xs:documentation>
            A community-specific extension to a message, for which the XML schema 
            is not known in advance.
        </xs:documentation></xs:annotation>
    </xs:element>
    <xs:complexType name="CommunityExtensionsType">
        <xs:annotation><xs:documentation>
            A data type for community-specific extensions to a message, for which the
            XML schema is not known in advance.
        </xs:documentation></xs:annotation>
        <xs:complexContent>
            <xs:extension base="structures:ObjectType">
                <xs:sequence>
                    <xs:any minOccurs="0" maxOccurs="unbounded" namespace="##any" processContents="lax"/> 
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
</xs:schema>
